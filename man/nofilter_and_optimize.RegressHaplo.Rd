% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RegressHaplo_util.R
\name{nofilter_and_optimize.RegressHaplo}
\alias{nofilter_and_optimize.RegressHaplo}
\title{Generate consistent haplotypes for a read table and applies a
RegressHaplo optimization.}
\usage{
nofilter_and_optimize.RegressHaplo(df, rho, max_dim = 1200,
  min_cover = 500)
}
\arguments{
\item{df}{read table}

\item{rho}{The rho that should be used.}

\item{max_dim}{The maximum number of consistent haplotypes that
the RegressHaplo algorithm can handle.}

\item{min_cover}{The minimum read coverage needed to link across a
read table position}

\item{max_dim}{The maximum number of haplotypes that can be filtered}
}
\value{
#' @return A list constaining the elements df, pi, fit, and h.
df is simply the read_table returned.  h are the global
consistent haplotypes generated after filtering; h is a
character matrix with colnames giving positions. pi and fit
are NA if the optimization is not run, otherwhise pi is a vector
of frequencies with length equal to the number of haplotypes (nrow(h))
and fit is a scalar describing the fit of the solution.
}
\description{
Generates consistent haplotypes across loci, with no filtering as
compared to filter_and_compute.RegressHaplo, and then if dimension
is small enough applies RegressHaplo algorithm
}
\details{
Haplotypes are generated by splitting the read table
positions into loci and then creating global haplotypes by
considering all possible local haplotype combinations.  If
the number of consistent haplotypes < max_dim, RegressHaplo is applied.

To run an optimization, run_optimization must be TRUE and a global_rho
must be provided.
}
